{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","visibilityError","setVisibilityTheError","setUserId","userChosen","setUserChosen","visibilityTodos","setVisibilityTodos","largestTodosId","Math","max","action","method","onSubmit","event","preventDefault","trim","userToCreate","prevTodos","addTodo","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,uBCpDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCJ,EAAgBI,EAAhBJ,KAAME,EAAUE,EAAVF,MAEd,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCHMO,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,UACAN,EAEEI,EAFFJ,KACAL,EACES,EADFT,GAGF,OACE,0BACE,UAASA,EACTM,UAAWM,IACT,WACA,CACE,sBAAuBD,IAL7B,UASE,oBAAIL,UAAU,kBAAd,SACGI,IAGFL,GACC,cAAC,EAAD,CAAUA,KAAMA,QCxBXQ,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKT,UCJxC,SAASgB,EAAQC,GAGf,OAFkBC,EAAgBC,MAAK,SAAAd,GAAI,OAAIA,EAAKL,KAAOiB,MAEvC,KAGf,IAAMH,ECdE,CACb,CACEd,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXM,OAAQ,IDHiCF,KAAI,SAAAN,GAAI,kCAChDA,GADgD,IAEnDJ,KAAMW,EAAQP,EAAKQ,aAGRG,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAiDD,oBAAS,GAA1D,mBAAOE,EAAP,KAAwBC,EAAxB,KACA,EAA4BH,mBAAS,GAArC,mBAAOJ,EAAP,KAAeQ,EAAf,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8CN,mBAASP,GAAvD,mBAAOc,EAAP,KAAwBC,EAAxB,KAEMC,EAAiBC,KAAKC,IAAL,MAAAD,KAAI,YAAQH,EAAgBb,KAAI,SAAAN,GAAI,OAAIA,EAAKT,QAAO,EAiC3E,OACE,sBAAKM,UAAU,MAAf,UACE,+CAEA,uBACE2B,OAAO,aACPC,OAAO,OACPC,SAAU,SAACC,GACTA,EAAMC,iBAvCE,SAACrC,GACf,GAAIgB,EAAQhB,IAAOU,EAAM4B,OAAQ,CAC/B,IAAMC,EAAe,CACnBvC,GAAI8B,EACJb,SACAP,QACAC,WAAW,EACXN,KAAMW,EAAQC,IAGhBY,GAAmB,SAAAW,GACjB,MAAM,GAAN,mBACKA,GADL,CAEED,OAIJjB,EAAS,IACTG,EAAU,GAGPR,IACHQ,EAAU,GACVE,GAAc,IAGXjB,EAAM4B,QACTd,GAAsB,GAalBiB,CAAQxB,IALZ,UAQE,sBAAKX,UAAU,QAAf,UACE,uBAAOoC,QAAQ,QAAf,qBACA,uBACEC,KAAK,OACL3C,GAAG,QACH,UAAQ,aACRC,KAAK,QACL2C,YAAY,gBACZC,MAAOnC,EACPoC,SAAU,SAACV,GACTd,EAASc,EAAMW,OAAOF,OACtBrB,GAAsB,OAGxBD,GACA,sBAAMjB,UAAU,QAAhB,qCAKJ,sBAAKA,UAAU,QAAf,UACE,uBAAOoC,QAAQ,OAAf,oBAEA,yBACE,UAAQ,aACR1C,GAAG,OACH6C,MAAO5B,EACP6B,SAAU,SAACV,GACTX,GAAWW,EAAMW,OAAOF,OACxBlB,GAAc,IANlB,UASE,wBAAQkB,MAAM,IAAIG,UAAQ,EAA1B,2BAEC9B,EAAgBH,KAAI,gBAAGf,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACnB,wBAAiB4C,MAAO7C,EAAxB,SAA6BC,GAAhBD,UAGf0B,GACA,sBAAMpB,UAAU,QAAhB,qCAKJ,wBAAQqC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,yBAASrC,UAAU,WAAnB,SACE,cAAC,EAAD,CAAUQ,MAAOc,UEtHzBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.66de7974.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [visibilityError, setVisibilityTheError] = useState(true);\n  const [userId, setUserId] = useState(0);\n  const [userChosen, setUserChosen] = useState(true);\n  const [visibilityTodos, setVisibilityTodos] = useState(todos);\n\n  const largestTodosId = Math.max(...visibilityTodos.map(todo => todo.id)) + 1;\n\n  const addTodo = (id: number) => {\n    if (getUser(id) && title.trim()) {\n      const userToCreate = {\n        id: largestTodosId,\n        userId,\n        title,\n        completed: false,\n        user: getUser(userId),\n      };\n\n      setVisibilityTodos(prevTodos => {\n        return [\n          ...prevTodos,\n          userToCreate,\n        ];\n      });\n\n      setTitle('');\n      setUserId(0);\n    }\n\n    if (!userId) {\n      setUserId(0);\n      setUserChosen(false);\n    }\n\n    if (!title.trim()) {\n      setVisibilityTheError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addTodo(userId);\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setVisibilityTheError(true);\n            }}\n          />\n          {!visibilityError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setUserChosen(true);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>{name}</option>\n            ))}\n          </select>\n          {!userChosen && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={visibilityTodos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}